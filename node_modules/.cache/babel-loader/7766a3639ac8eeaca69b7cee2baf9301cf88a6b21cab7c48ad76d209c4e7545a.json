{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\ReactProjectCW\\\\propertyseeker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header.jsx';\nimport SearchForm from './components/SearchForm.jsx';\nimport PropertyList from './components/PropertyList.jsx';\nimport PropertyDetails from './components/PropertyDetails.jsx';\nimport Favorites from './components/Favourites.jsx';\nimport Footer from './components/Footer.jsx';\nimport propertiesData from './data/properties.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const updateFilteredProperties = filteredProperties => {\n    setFilteredProperties(filteredProperties);\n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = property => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => favorites.includes(property.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !selectedProperty ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favorites-toggle\",\n        onClick: () => setShowFavorites(!showFavorites),\n        children: showFavorites ? 'X' : 'Show Favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        onSearch: updateFilteredProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), !searchPerformed ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-results-message\",\n        children: \"All properties:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : filteredProperties.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-results-message\",\n        children: \"Here are the search results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-results-message\",\n        children: \"No properties found. Please try different criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n        properties: filteredProperties,\n        onPropertySelect: handlePropertySelect,\n        favorites: favorites,\n        onToggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Favorites, {\n        show: showFavorites,\n        properties: properties.filter(property => favorites.includes(property.id)),\n        onPropertySelect: handlePropertySelect,\n        onToggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(PropertyDetails, {\n      property: selectedProperty,\n      onBack: handleBackToSearch,\n      isFavorite: favorites.includes(selectedProperty.id),\n      onToggleFavorite: () => toggleFavorite(selectedProperty.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EaJOfMbDvYAIm/JUKMji5ah9sCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchForm","PropertyList","PropertyDetails","Favorites","Footer","propertiesData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","properties","setProperties","filteredProperties","setFilteredProperties","showFavorites","setShowFavorites","favorites","setFavorites","searchPerformed","setSearchPerformed","selectedProperty","setSelectedProperty","updateFilteredProperties","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","handlePropertySelect","property","handleBackToSearch","favoriteProperties","filter","includes","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSearch","length","onPropertySelect","onToggleFavorite","toggleFavorite","show","onBack","isFavorite","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/ReactProjectCW/propertyseeker/src/App.js"],"sourcesContent":["/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Header from './components/Header.jsx';\nimport SearchForm from './components/SearchForm.jsx';\nimport PropertyList from './components/PropertyList.jsx';\nimport PropertyDetails from './components/PropertyDetails.jsx';\nimport Favorites from './components/Favourites.jsx';\nimport Footer from './components/Footer.jsx';\nimport propertiesData from './data/properties.json';\n\nfunction App() {\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n\n  const updateFilteredProperties = (filteredProperties) => {\n    setFilteredProperties(filteredProperties); \n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = (property) => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => \n    favorites.includes(property.id)\n  );\n\n  return (\n    <div>\n      <Header />\n      {!selectedProperty ? (\n        <>\n          <button \n            className=\"favorites-toggle\"\n            onClick={() => setShowFavorites(!showFavorites)}\n          >\n            {showFavorites ? 'X' : 'Show Favorites'}\n          </button>\n\n          <SearchForm onSearch={updateFilteredProperties} />\n\n          {/* Conditionally Render Messages */}\n          {!searchPerformed ? (\n            <p className=\"search-results-message\">All properties:</p>\n          ) \n          : filteredProperties.length > 0 ? (\n            <p className=\"search-results-message\">Here are the search results:</p>\n          ) : (\n            <p className=\"no-results-message\">No properties found. Please try different criteria.</p>\n          )}\n\n          <PropertyList\n            properties={filteredProperties}\n            onPropertySelect={handlePropertySelect}\n            favorites={favorites}\n            onToggleFavorite={toggleFavorite}\n          />\n\n          <Favorites\n          show={showFavorites}\n          properties={properties.filter(property => favorites.includes(property.id))}\n          onPropertySelect={handlePropertySelect}\n          onToggleFavorite={toggleFavorite}\n        />\n        </>\n        \n      ) : (\n        <PropertyDetails\n          property={selectedProperty}\n          onBack={handleBackToSearch}\n          isFavorite={favorites.includes(selectedProperty.id)}\n          onToggleFavorite={() => toggleFavorite(selectedProperty.id)}\n        />\n      )}\n\n    <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}