{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\ReactProjectCW\\\\propertyseeker\\\\src\\\\App.js\";\n// /**\n//  * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n//  */\n\n// // Import React library and the necessary components\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// import Home from './Home.jsx';\n// // import Header from './components/Header.jsx';\n// // import SearchForm from './components/SearchForm.jsx';\n// // import PropertyList from './components/PropertyList.jsx';\n// // import PropertyDetails from './components/PropertyDetails.jsx';\n// // import Favorites from './components/Favourites.jsx';\n// // import Footer from './components/Footer.jsx';\n// import propertiesData from './data/properties.json';\n\n// function App() {\n//   const [properties, setProperties] = useState(propertiesData.properties);\n//   const [filteredProperties, setFilteredProperties] = useState(properties);\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [favorites, setFavorites] = useState([]);\n//   const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n//   // State for property details\n//   const [selectedProperty, setSelectedProperty] = useState(null);\n\n//   const updateFilteredProperties = (filteredProperties) => {\n//     setFilteredProperties(filteredProperties); \n//     // Update the filtered properties state\n//     setSearchPerformed(true);\n//     //Set to true when a search is performed \n//   };\n\n//   // User effect hooks to load and save favourites in localstorage \n//   useEffect(() => {\n//     const savedFavorites = localStorage.getItem('favorites');\n//     if (savedFavorites) {\n//       setFavorites(JSON.parse(savedFavorites));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem('favorites', JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   // Handle selecting a property to view details \n//   const handlePropertySelect = (property) => {\n//     setSelectedProperty(property);\n//   };\n\n//   // To handle going back to the search results from the property details\n//   const handleBackToSearch = () => {\n//     setSelectedProperty(null);\n//   };\n\n//   // Filter properties to show only the favorites\n//   const favoriteProperties = properties.filter(property => \n//     favorites.includes(property.id)\n//   );\n//   return (\n//     <Home\n//       selectedProperty={selectedProperty}\n//       setSelectedProperty={setSelectedProperty}\n//       showFavorites={showFavorites}\n//       setShowFavorites={setShowFavorites}\n//       updateFilteredProperties={updateFilteredProperties}\n//       searchPerformed={searchPerformed}\n//       filteredProperties={filteredProperties}\n//       handlePropertySelect={handlePropertySelect}\n//       toggleFavorite={toggleFavorite}\n//       favorites={favorites}\n//       properties={properties}\n//       handleBackToSearch={handleBackToSearch}\n//     />\n//   );\n// }\n\n// export default App;\n\n/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React from 'react';\nimport './App.css';\nimport Home from './Home.jsx';\nimport propertiesData from './data/properties.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const properties = propertiesData.properties;\n  return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Home","propertiesData","jsxDEV","_jsxDEV","App","properties","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/ReactProjectCW/propertyseeker/src/App.js"],"sourcesContent":["// /**\n//  * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n//  */\n\n// // Import React library and the necessary components\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// import Home from './Home.jsx';\n// // import Header from './components/Header.jsx';\n// // import SearchForm from './components/SearchForm.jsx';\n// // import PropertyList from './components/PropertyList.jsx';\n// // import PropertyDetails from './components/PropertyDetails.jsx';\n// // import Favorites from './components/Favourites.jsx';\n// // import Footer from './components/Footer.jsx';\n// import propertiesData from './data/properties.json';\n\n// function App() {\n//   const [properties, setProperties] = useState(propertiesData.properties);\n//   const [filteredProperties, setFilteredProperties] = useState(properties);\n//   const [showFavorites, setShowFavorites] = useState(false);\n//   const [favorites, setFavorites] = useState([]);\n//   const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n//   // State for property details\n//   const [selectedProperty, setSelectedProperty] = useState(null);\n\n//   const updateFilteredProperties = (filteredProperties) => {\n//     setFilteredProperties(filteredProperties); \n//     // Update the filtered properties state\n//     setSearchPerformed(true);\n//     //Set to true when a search is performed \n//   };\n\n//   // User effect hooks to load and save favourites in localstorage \n//   useEffect(() => {\n//     const savedFavorites = localStorage.getItem('favorites');\n//     if (savedFavorites) {\n//       setFavorites(JSON.parse(savedFavorites));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem('favorites', JSON.stringify(favorites));\n//   }, [favorites]);\n\n\n//   // Handle selecting a property to view details \n//   const handlePropertySelect = (property) => {\n//     setSelectedProperty(property);\n//   };\n\n//   // To handle going back to the search results from the property details\n//   const handleBackToSearch = () => {\n//     setSelectedProperty(null);\n//   };\n\n//   // Filter properties to show only the favorites\n//   const favoriteProperties = properties.filter(property => \n//     favorites.includes(property.id)\n//   );\n//   return (\n//     <Home\n//       selectedProperty={selectedProperty}\n//       setSelectedProperty={setSelectedProperty}\n//       showFavorites={showFavorites}\n//       setShowFavorites={setShowFavorites}\n//       updateFilteredProperties={updateFilteredProperties}\n//       searchPerformed={searchPerformed}\n//       filteredProperties={filteredProperties}\n//       handlePropertySelect={handlePropertySelect}\n//       toggleFavorite={toggleFavorite}\n//       favorites={favorites}\n//       properties={properties}\n//       handleBackToSearch={handleBackToSearch}\n//     />\n//   );\n// }\n\n// export default App;\n\n\n\n\n/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React from 'react';\nimport './App.css';\n\nimport Home from './Home.jsx';\nimport propertiesData from './data/properties.json';\n\nfunction App() {\n  const properties = propertiesData.properties;\n  return (\n    <Home/>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,UAAU,GAAGJ,cAAc,CAACI,UAAU;EAC5C,oBACEF,OAAA,CAACH,IAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEX;AAACC,EAAA,GALQN,GAAG;AAOZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}