{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\PropertySeeker\\\\src\\\\components\\\\Favourites.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favourites = ({\n  children,\n  properties\n}) => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false); // State to manage the visibility of the favorites container\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n\n  // Load favorites from local storage\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  // Save favorites to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const toggleFavorite = propertyId => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.includes(propertyId)) {\n        return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\n      } else {\n        return [...prevFavorites, propertyId]; // Add to favorites\n      }\n    });\n  };\n  const addToFavourite = propertyId => {\n    setFavorites(prevFavorites => {\n      if (!prevFavorites.includes(propertyId)) {\n        return [...prevFavorites, propertyId]; // Add to favorites if not already present\n      }\n      return prevFavorites; // Return the existing favorites if already present\n    });\n  };\n  const removeFromFavourite = propertyId => {\n    setFavorites(prevFavorites => {\n      return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\n    });\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.currentTarget.classList.add('active');\n  };\n  const handleDragLeave = e => {\n    e.currentTarget.classList.remove('active');\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('active');\n    const propertyId = e.dataTransfer.getData('propertyId');\n    addToFavourite(propertyId);\n  };\n  const handleDragStartRemove = e => {\n    e.dataTransfer.setData('propertyId', propertyId);\n    console.log(`Dragging to remove property with ID: ${propertyId}`);\n  };\n  const handleDragEndRemove = e => {\n    const propertyId = e.dataTransfer.getData(propertyId);\n    const dropZone = document.elementFromPoint(e.clientX, e.clientY);\n    if (!dropZone || !dropZone.classList.contains('favorites-container')) {\n      removeFromFavourite(propertyId);\n      console.log(`Removed property with ID: ${propertyId}`);\n    }\n  };\n  const handleClearFavorites = () => {\n    setShowClearConfirmation(true);\n  };\n  const clearFavorites = () => {\n    setFavorites([]);\n    localStorage.removeItem('favorites');\n  };\n  const confirmClearFavorites = () => {\n    clearFavorites();\n    setShowClearConfirmation(false);\n  };\n  const cancelClearFavorites = () => {\n    setShowClearConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"favorites-toggle\",\n      onClick: () => setShowFavorites(!showFavorites),\n      children: showFavorites ? 'Hide Favourites' : 'Show Favourites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showFavorites && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites-container droppable\",\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favorite Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), showClearConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to clear all favorites?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmClearFavorites,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelClearFavorites,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: favorites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag properties here to add to favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this) : properties.filter(property => favorites.includes(property.id)).map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-item\",\n          draggable: true,\n          onDragStart: e => handleDragStartRemove(e, property.id),\n          onDragEnd: handleDragEndRemove,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: property.picture,\n            alt: property.title,\n            className: \"favorite-item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"name-in-fav\",\n              children: property.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price-in-fav\",\n              children: [\"\\xA3 \", property.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleFavorite(property.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, property.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearFavorites,\n        className: \"clear-fav-btn\",\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), children({\n      favorites,\n      toggleFavorite\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Favourites, \"U8Eg+7CXjqIn0Vf03fgxvqwM27c=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Favourites","children","properties","_s","favorites","setFavorites","showFavorites","setShowFavorites","showClearConfirmation","setShowClearConfirmation","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","toggleFavorite","propertyId","prevFavorites","includes","filter","id","addToFavourite","removeFromFavourite","handleDragOver","e","preventDefault","currentTarget","classList","add","handleDragLeave","remove","handleDrop","dataTransfer","getData","handleDragStartRemove","setData","console","log","handleDragEndRemove","dropZone","document","elementFromPoint","clientX","clientY","contains","handleClearFavorites","clearFavorites","removeItem","confirmClearFavorites","cancelClearFavorites","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDragLeave","onDrop","length","property","map","draggable","onDragStart","onDragEnd","src","picture","alt","title","price","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/PropertySeeker/src/components/Favourites.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Favourites = ({ children, properties }) => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showFavorites, setShowFavorites] = useState(false); // State to manage the visibility of the favorites container\r\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\r\n\r\n  // Load favorites from local storage\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('favorites');\r\n    if (savedFavorites) {\r\n      setFavorites(JSON.parse(savedFavorites));\r\n    }\r\n  }, []);\r\n\r\n  // Save favorites to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const toggleFavorite = (propertyId) => {\r\n    setFavorites((prevFavorites) => {\r\n      if (prevFavorites.includes(propertyId)) {\r\n        return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\r\n      } else {\r\n        return [...prevFavorites, propertyId]; // Add to favorites\r\n      }\r\n    });\r\n  };\r\n\r\n  const addToFavourite = (propertyId) => {\r\n    setFavorites((prevFavorites) => {\r\n      if (!prevFavorites.includes(propertyId)) {\r\n        return [...prevFavorites, propertyId]; // Add to favorites if not already present\r\n      }\r\n      return prevFavorites; // Return the existing favorites if already present\r\n    });\r\n  };\r\n\r\n  const removeFromFavourite = (propertyId) => {\r\n    setFavorites((prevFavorites) => {\r\n      return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\r\n    });\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.add('active');\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.currentTarget.classList.remove('active');\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.remove('active');\r\n    const propertyId = e.dataTransfer.getData('propertyId');\r\n    addToFavourite(propertyId);\r\n  };\r\n\r\n  const handleDragStartRemove = (e) => {\r\n    e.dataTransfer.setData('propertyId', propertyId);\r\n    console.log(`Dragging to remove property with ID: ${propertyId}`);\r\n  };\r\n\r\n  const handleDragEndRemove = (e) => {\r\n    const propertyId = e.dataTransfer.getData(propertyId);\r\n    const dropZone = document.elementFromPoint(e.clientX, e.clientY);\r\n    if (!dropZone || !dropZone.classList.contains('favorites-container')) {\r\n      removeFromFavourite(propertyId);\r\n      console.log(`Removed property with ID: ${propertyId}`);\r\n    }\r\n  };\r\n\r\n  const handleClearFavorites = () => {\r\n    setShowClearConfirmation(true); \r\n  };\r\n\r\n  const clearFavorites = () => {\r\n    setFavorites([]);\r\n    localStorage.removeItem('favorites');\r\n  };\r\n\r\n  const confirmClearFavorites = () => {\r\n    clearFavorites();\r\n    setShowClearConfirmation(false);\r\n  };\r\n\r\n  const cancelClearFavorites = () => {\r\n    setShowClearConfirmation(false); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className=\"favorites-toggle\" \r\n        onClick={() => setShowFavorites(!showFavorites)}\r\n      >\r\n        {showFavorites ? 'Hide Favourites' : 'Show Favourites'}\r\n      </button>\r\n      {showFavorites && (\r\n        <div \r\n          className=\"favorites-container droppable\"\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <h2>Favorite Properties</h2>\r\n          {showClearConfirmation && (\r\n            <div className=\"clear-confirmation\">\r\n              <p>Are you sure you want to clear all favorites?</p>\r\n              <button onClick={confirmClearFavorites}>Yes</button>\r\n              <button onClick={cancelClearFavorites}>No</button>\r\n            </div>\r\n          )}\r\n          <div>\r\n            {favorites.length === 0 ? (\r\n              <p>Drag properties here to add to favorites</p>\r\n            ) : (\r\n              properties\r\n                .filter(property => favorites.includes(property.id))\r\n                .map(property => (\r\n                    <div\r\n                        key={property.id}\r\n                        className=\"favorite-item\"\r\n                        draggable\r\n                        onDragStart={(e) => handleDragStartRemove(e,property.id)}\r\n                        onDragEnd={handleDragEndRemove}\r\n                    >\r\n                    <img src={property.picture} alt={property.title} className=\"favorite-item-img\" />\r\n                    <div>\r\n                      <h4 className='name-in-fav'>{property.title}</h4>\r\n                      <p className='price-in-fav'>£ {property.price}</p>\r\n                      <button onClick={() => toggleFavorite(property.id)}>Remove</button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n            )}\r\n          </div>\r\n          <button onClick={handleClearFavorites} className=\"clear-fav-btn\">Clear All</button>\r\n        </div>\r\n      )}\r\n      {children({ favorites, toggleFavorite })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}