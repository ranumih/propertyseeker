{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\PropertySeeker\\\\src\\\\components\\\\Favourites.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favourites = ({\n  children\n}) => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false); // State to manage the visibility of the favorites container\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\n\n  // Load favorites from local storage\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  // Save favorites to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const toggleFavorite = propertyId => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.includes(propertyId)) {\n        return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\n      } else {\n        return [...prevFavorites, propertyId]; // Add to favorites\n      }\n    });\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    const target = e.target;\n    if (target.classList.contains('droppable')) {\n      target.classList.add('active');\n    }\n  };\n  const handleDragLeave = e => {\n    const target = e.target;\n    if (target.classList.contains('droppable')) {\n      target.classList.remove('active');\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const propertyId = parseInt(e.dataTransfer.getData('propertyId'), 10);\n    toggleFavorite(propertyId); // Toggle favorite status on drop\n  };\n  const handleClearFavorites = () => {\n    setShowClearConfirmation(true);\n  };\n  const clearFavorites = () => {\n    setFavorites([]);\n    localStorage.removeItem('favorites');\n  };\n  const confirmClearFavorites = () => {\n    clearFavorites();\n    setShowClearConfirmation(false);\n  };\n  const cancelClearFavorites = () => {\n    setShowClearConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"favorites-toggle\",\n      onClick: () => setShowFavorites(!showFavorites),\n      children: showFavorites ? 'Hide Favourites' : 'Show Favourites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showFavorites && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favorite Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), showClearConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to clear all favorites?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmClearFavorites,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelClearFavorites,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droppable\",\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: favorites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag properties here to add to favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : children({\n          favorites,\n          toggleFavorite\n        }).map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: property.picture,\n            alt: property.title,\n            className: \"favorite-item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"name-in-fav\",\n              children: property.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price-in-fav\",\n              children: [\"\\xA3 \", property.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleFavorite(property.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)]\n        }, property.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearFavorites,\n        className: \"clear-fav-btn\",\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), children({\n      favorites,\n      toggleFavorite\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Favourites, \"U8Eg+7CXjqIn0Vf03fgxvqwM27c=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Favourites","children","_s","favorites","setFavorites","showFavorites","setShowFavorites","showClearConfirmation","setShowClearConfirmation","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","toggleFavorite","propertyId","prevFavorites","includes","filter","id","handleDragOver","e","preventDefault","target","classList","contains","add","handleDragLeave","remove","handleDrop","parseInt","dataTransfer","getData","handleClearFavorites","clearFavorites","removeItem","confirmClearFavorites","cancelClearFavorites","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDragLeave","onDrop","length","map","property","src","picture","alt","title","price","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/PropertySeeker/src/components/Favourites.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Favourites = ({ children }) => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showFavorites, setShowFavorites] = useState(false); // State to manage the visibility of the favorites container\r\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\r\n\r\n  // Load favorites from local storage\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('favorites');\r\n    if (savedFavorites) {\r\n      setFavorites(JSON.parse(savedFavorites));\r\n    }\r\n  }, []);\r\n\r\n  // Save favorites to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const toggleFavorite = (propertyId) => {\r\n    setFavorites((prevFavorites) => {\r\n      if (prevFavorites.includes(propertyId)) {\r\n        return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\r\n      } else {\r\n        return [...prevFavorites, propertyId]; // Add to favorites\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    const target = e.target;\r\n    if (target.classList.contains('droppable')) {\r\n      target.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    const target = e.target;\r\n    if (target.classList.contains('droppable')) {\r\n      target.classList.remove('active');\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const propertyId = parseInt(e.dataTransfer.getData('propertyId'), 10);\r\n    toggleFavorite(propertyId); // Toggle favorite status on drop\r\n  };\r\n\r\n  const handleClearFavorites = () => {\r\n    setShowClearConfirmation(true); \r\n  };\r\n\r\n  const clearFavorites = () => {\r\n    setFavorites([]);\r\n    localStorage.removeItem('favorites');\r\n  };\r\n\r\n  const confirmClearFavorites = () => {\r\n    clearFavorites();\r\n    setShowClearConfirmation(false);\r\n  };\r\n\r\n  const cancelClearFavorites = () => {\r\n    setShowClearConfirmation(false); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className=\"favorites-toggle\" \r\n        onClick={() => setShowFavorites(!showFavorites)}\r\n      >\r\n        {showFavorites ? 'Hide Favourites' : 'Show Favourites'}\r\n      </button>\r\n      {showFavorites && (\r\n        <div className=\"favorites-container\">\r\n          <h2>Favorite Properties</h2>\r\n          {showClearConfirmation && (\r\n            <div className=\"clear-confirmation\">\r\n              <p>Are you sure you want to clear all favorites?</p>\r\n              <button onClick={confirmClearFavorites}>Yes</button>\r\n              <button onClick={cancelClearFavorites}>No</button>\r\n            </div>\r\n          )}\r\n          <div\r\n            className=\"droppable\"\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n          >\r\n            {favorites.length === 0 ? (\r\n              <p>Drag properties here to add to favorites</p>\r\n            ) : (\r\n              children({ favorites, toggleFavorite }).map(property => (\r\n                <div key={property.id} className=\"favorite-item\">\r\n                  <img src={property.picture} alt={property.title} className=\"favorite-item-img\" />\r\n                  <div>\r\n                    <h4 className='name-in-fav'>{property.title}</h4>\r\n                    <p className='price-in-fav'>£ {property.price}</p>\r\n                    <button onClick={() => toggleFavorite(property.id)}>Remove</button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <button onClick={handleClearFavorites} className=\"clear-fav-btn\">Clear All</button>\r\n        </div>\r\n      )}\r\n      {children({ favorites, toggleFavorite })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}