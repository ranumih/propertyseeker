{"ast":null,"code":"// import React, { useState, createContext, useContext } from 'react';\n\n// // Create a context for favorites\n// const FavouritesContext = createContext();\n\n// export const useFavourites = () => useContext(FavouritesContext);\n\n// export const FavouritesProvider = ({ children }) => {\n//   const [favorites, setFavorites] = useState([]);\n\n//   const toggleFavorite = (propertyId) => {\n//     setFavorites((prevFavorites) => {\n//       if (prevFavorites.includes(propertyId)) {\n//         return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\n//       } else {\n//         return [...prevFavorites, propertyId]; // Add to favorites\n//       }\n//     });\n//   };\n\n//   return (\n//     <FavouritesContext.Provider value={{ favorites, toggleFavorite }}>\n//       {children}\n//     </FavouritesContext.Provider>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/PropertySeeker/src/components/Favourites.jsx"],"sourcesContent":["// import React, { useState, createContext, useContext } from 'react';\r\n\r\n// // Create a context for favorites\r\n// const FavouritesContext = createContext();\r\n\r\n// export const useFavourites = () => useContext(FavouritesContext);\r\n\r\n// export const FavouritesProvider = ({ children }) => {\r\n//   const [favorites, setFavorites] = useState([]);\r\n\r\n//   const toggleFavorite = (propertyId) => {\r\n//     setFavorites((prevFavorites) => {\r\n//       if (prevFavorites.includes(propertyId)) {\r\n//         return prevFavorites.filter(id => id !== propertyId); // Remove from favorites\r\n//       } else {\r\n//         return [...prevFavorites, propertyId]; // Add to favorites\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <FavouritesContext.Provider value={{ favorites, toggleFavorite }}>\r\n//       {children}\r\n//     </FavouritesContext.Provider>\r\n//   );\r\n// };"],"mappings":"AAAA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}