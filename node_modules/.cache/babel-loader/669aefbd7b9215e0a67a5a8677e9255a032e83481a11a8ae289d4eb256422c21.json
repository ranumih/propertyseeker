{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\ReactProjectCW\\\\propertyseeker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport SearchForm from './components/SearchForm.js';\nimport PropertyList from './components/PropertyList.js';\nimport PropertyDetails from './components/PropertyDetails.js';\nimport Favorites from './components/Favourites.js';\nimport propertiesData from './data/properties.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by defalut the search performed is set to be false \n\n  const updateFilteredProperties = filteredProperties => {\n    setFilteredProperties(filteredProperties);\n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Toggle favorite status of a property\n  const toggleFavorite = propertyId => {\n    setFavorites(prev => {\n      if (prev.includes(propertyId)) {\n        return prev.filter(id => id !== propertyId);\n      }\n      return [...prev, propertyId];\n    });\n  };\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = property => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => favorites.includes(property.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !selectedProperty ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favorites-toggle\",\n        onClick: () => setShowFavorites(!showFavorites),\n        children: showFavorites ? 'X' : 'Show Favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        onSearch: updateFilteredProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), !searchPerformed ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-results-message\",\n        children: \"All properties:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : filteredProperties.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-results-message\",\n        children: \"Here are the search results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-results-message\",\n        children: \"No properties found. Please try different criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n        properties: filteredProperties,\n        onPropertySelect: handlePropertySelect,\n        favorites: favorites,\n        onToggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Favorites, {\n        show: showFavorites,\n        properties: properties.filter(property => favorites.includes(property.id)),\n        onPropertySelect: handlePropertySelect,\n        onToggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(PropertyDetails, {\n      property: selectedProperty,\n      onBack: handleBackToSearch,\n      isFavorite: favorites.includes(selectedProperty.id),\n      onToggleFavorite: () => toggleFavorite(selectedProperty.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EaJOfMbDvYAIm/JUKMji5ah9sCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchForm","PropertyList","PropertyDetails","Favorites","propertiesData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","properties","setProperties","filteredProperties","setFilteredProperties","showFavorites","setShowFavorites","favorites","setFavorites","searchPerformed","setSearchPerformed","updateFilteredProperties","selectedProperty","setSelectedProperty","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","toggleFavorite","propertyId","prev","includes","filter","id","handlePropertySelect","property","handleBackToSearch","favoriteProperties","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSearch","length","onPropertySelect","onToggleFavorite","show","onBack","isFavorite","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/ReactProjectCW/propertyseeker/src/App.js"],"sourcesContent":["/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Header from './components/Header.js';\nimport SearchForm from './components/SearchForm.js';\nimport PropertyList from './components/PropertyList.js';\nimport PropertyDetails from './components/PropertyDetails.js';\nimport Favorites from './components/Favourites.js';\nimport propertiesData from './data/properties.json';\n\nfunction App() {\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by defalut the search performed is set to be false \n  \n  const updateFilteredProperties = (filteredProperties) => {\n    setFilteredProperties(filteredProperties); \n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Toggle favorite status of a property\n  const toggleFavorite = (propertyId) => {\n    setFavorites(prev => {\n      if (prev.includes(propertyId)) {\n        return prev.filter(id => id !== propertyId);\n      }\n      return [...prev, propertyId];\n    });\n  };\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = (property) => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => \n    favorites.includes(property.id)\n  );\n\n  return (\n    <div>\n      <Header />\n      {!selectedProperty ? (\n        <>\n          <button \n            className=\"favorites-toggle\"\n            onClick={() => setShowFavorites(!showFavorites)}\n          >\n            {showFavorites ? 'X' : 'Show Favorites'}\n          </button>\n          <SearchForm onSearch={updateFilteredProperties} />\n\n          {/* Conditionally Render Messages */}\n          {!searchPerformed ? (\n            <p className=\"search-results-message\">All properties:</p>\n          ) \n          : filteredProperties.length > 0 ? (\n            <p className=\"search-results-message\">Here are the search results:</p>\n          ) : (\n            <p className=\"no-results-message\">No properties found. Please try different criteria.</p>\n          )}\n\n          <PropertyList\n            properties={filteredProperties}\n            onPropertySelect={handlePropertySelect}\n            favorites={favorites}\n            onToggleFavorite={toggleFavorite}\n          />\n\n          <Favorites\n          show={showFavorites}\n          properties={properties.filter(property => favorites.includes(property.id))}\n          onPropertySelect={handlePropertySelect}\n          onToggleFavorite={toggleFavorite}\n        />\n        </>\n        \n      ) : (\n        <PropertyDetails\n          property={selectedProperty}\n          onBack={handleBackToSearch}\n          isFavorite={favorites.includes(selectedProperty.id)}\n          onToggleFavorite={() => toggleFavorite(selectedProperty.id)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}