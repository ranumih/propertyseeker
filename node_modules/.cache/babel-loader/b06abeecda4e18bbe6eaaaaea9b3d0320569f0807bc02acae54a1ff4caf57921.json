{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\ReactProjectCW\\\\propertyseeker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './Home.jsx';\nimport Header from './components/Header.jsx';\nimport SearchForm from './components/SearchForm.jsx';\nimport PropertyList from './components/PropertyList.jsx';\nimport PropertyDetails from './components/PropertyDetails.jsx';\nimport Favorites from './components/Favourites.jsx';\nimport Footer from './components/Footer.jsx';\nimport propertiesData from './data/properties.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const updateFilteredProperties = filteredProperties => {\n    setFilteredProperties(filteredProperties);\n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = property => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => favorites.includes(property.id));\n  return /*#__PURE__*/_jsxDEV(Home, {\n    selectedProperty: selectedProperty,\n    setSelectedProperty: setSelectedProperty,\n    showFavorites: showFavorites,\n    setShowFavorites: setShowFavorites,\n    updateFilteredProperties: updateFilteredProperties,\n    searchPerformed: searchPerformed,\n    filteredProperties: filteredProperties,\n    handlePropertySelect: handlePropertySelect,\n    toggleFavorite: toggleFavorite,\n    favorites: favorites,\n    properties: properties,\n    handleBackToSearch: handleBackToSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EaJOfMbDvYAIm/JUKMji5ah9sCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","Header","SearchForm","PropertyList","PropertyDetails","Favorites","Footer","propertiesData","jsxDEV","_jsxDEV","App","_s","properties","setProperties","filteredProperties","setFilteredProperties","showFavorites","setShowFavorites","favorites","setFavorites","searchPerformed","setSearchPerformed","selectedProperty","setSelectedProperty","updateFilteredProperties","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","handlePropertySelect","property","handleBackToSearch","favoriteProperties","filter","includes","id","toggleFavorite","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/ReactProjectCW/propertyseeker/src/App.js"],"sourcesContent":["/**\n * Responsible for the HTML displayed in the browser / Controls the view inside the browser \n */\n\n// Import React library and the necessary components\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Home from './Home.jsx';\nimport Header from './components/Header.jsx';\nimport SearchForm from './components/SearchForm.jsx';\nimport PropertyList from './components/PropertyList.jsx';\nimport PropertyDetails from './components/PropertyDetails.jsx';\nimport Favorites from './components/Favourites.jsx';\nimport Footer from './components/Footer.jsx';\nimport propertiesData from './data/properties.json';\n\nfunction App() {\n  const [properties, setProperties] = useState(propertiesData.properties);\n  const [filteredProperties, setFilteredProperties] = useState(properties);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false); //by default the search performed is set to be false \n  // State for property details\n  const [selectedProperty, setSelectedProperty] = useState(null);\n\n  const updateFilteredProperties = (filteredProperties) => {\n    setFilteredProperties(filteredProperties); \n    // Update the filtered properties state\n    setSearchPerformed(true);\n    //Set to true when a search is performed \n  };\n\n  // User effect hooks to load and save favourites in localstorage \n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n\n  // Handle selecting a property to view details \n  const handlePropertySelect = (property) => {\n    setSelectedProperty(property);\n  };\n\n  // To handle going back to the search results from the property details\n  const handleBackToSearch = () => {\n    setSelectedProperty(null);\n  };\n\n  // Filter properties to show only the favorites\n  const favoriteProperties = properties.filter(property => \n    favorites.includes(property.id)\n  );\n  return (\n    <Home\n      selectedProperty={selectedProperty}\n      setSelectedProperty={setSelectedProperty}\n      showFavorites={showFavorites}\n      setShowFavorites={setShowFavorites}\n      updateFilteredProperties={updateFilteredProperties}\n      searchPerformed={searchPerformed}\n      filteredProperties={filteredProperties}\n      handlePropertySelect={handlePropertySelect}\n      toggleFavorite={toggleFavorite}\n      favorites={favorites}\n      properties={properties}\n      handleBackToSearch={handleBackToSearch}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}