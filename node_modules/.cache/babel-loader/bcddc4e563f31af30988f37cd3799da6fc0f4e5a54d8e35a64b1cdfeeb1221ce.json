{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahamed Sabith\\\\OneDrive\\\\Documents\\\\ReactProjectCW\\\\propertyseeker\\\\src\\\\components\\\\PropertyDetails.jsx\",\n  _s = $RefreshSig$();\n// /**\n//  * This component renders the details of a property, including an image gallery, \n//  * property information, and tabs for description, floor plan, and map. \n//  * It also includes functionality to mark the property as a favorite and drag support for favorites.\n// */\n\n// import React, { useState } from 'react'; // Import the React and useState hooks\n\n// const PropertyDetails = ({\n//   property,\n//   onBack,\n//   isFavorite,\n//   onToggleFavorite,\n// }) => {\n//   const [activeTab, setActiveTab] = useState('description');\n//   const [selectedImage, setSelectedImage] = useState(0);\n//   const [isFullscreen, setIsFullscreen] = useState(false);\n\n//   if (!property) return null;\n\n//   const formatPrice = (price) => {\n//     return new Intl.NumberFormat('en-GB', {\n//       style: 'currency',\n//       currency: 'GBP',\n//       maximumFractionDigits: 0,\n//     }).format(price);\n//   };\n\n//    //image gallery controls\n//    const nextImage = () => {\n//     setSelectedImage((prev) => \n//       prev === property.images.length - 1 ? 0 : prev + 1\n//     );\n//   };\n\n//   const previousImage = () => {\n//     setSelectedImage((prev) => \n//       prev === 0 ? property.images.length - 1 : prev - 1\n//     );\n//   };\n\n//   //fullscreen toggle\n//   const toggleFullscreen = () => {\n//     setIsFullscreen(!isFullscreen);\n//   };\n\n//   return (\n//     <div className=\"property-details-page\">\n//       <button onClick={onBack} className=\"back-button\">\n//         ‚Üê Back to Search\n//       </button>\n\n//       <div className={`image-gallery ${isFullscreen ? 'fullscreen' : ''}`}>\n//         <button onClick={previousImage} className=\"gallery-nav prev\">\n//           ‚Äπ\n//         </button>\n//         <button onClick={nextImage} className=\"gallery-nav next\">\n//           ‚Ä∫\n//         </button>\n\n//         <img\n//           src={`${property.images[selectedImage]}`}\n//           alt={`${property.title} - view ${selectedImage + 1}`}\n//           className=\"main-image\"\n//           onClick={toggleFullscreen}\n//         />\n\n//         <div className=\"thumbnails\">\n//           {property.images.map((image, index) => (\n//             <img\n//               key={index}\n//               src={image}\n//               alt={`Thumbnail ${index + 1}`}\n//               className={`thumbnail ${selectedImage === index ? 'active' : ''}`}\n//               onClick={() => setSelectedImage(index)}\n//             />\n//           ))}\n//         </div>\n//       </div>\n\n//       <h1>{property.title}</h1>\n//       <p className=\"property-price\">{formatPrice(property.price)}</p>\n\n//       {/* Added drag support for favorites */}\n//       <div \n//         className=\"favorite-container\"\n//         draggable\n//         onDragStart={(e) => {\n//           e.dataTransfer.setData('propertyId', property.id.toString());\n//         }}\n//       >\n\n//        <button \n//           onClick={onToggleFavorite}\n//           className={`favorite-button ${isFavorite ? 'active' : ''}`}\n//         >\n//           {isFavorite ? '‚ù§Ô∏è Remove from Favorites' : 'ü§ç Add to Favorites'}\n//         </button>\n//       </div>\n\n//       <div className=\"tabs\">\n//         <div className=\"tab-list\">\n//           <button\n//             className={`tab ${activeTab === 'description' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('description')}\n//           >\n//             Description\n//           </button>\n\n//           <button\n//             className={`tab ${activeTab === 'floorplan' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('floorplan')}\n//           >\n//             Floor Plan\n//           </button>\n\n//           <button\n//             className={`tab ${activeTab === 'map' ? 'active' : ''}`}\n//             onClick={() => setActiveTab('map')}\n//           >\n//             Map\n//           </button>\n//         </div>\n\n//         <div className=\"tab-content\">\n//           {activeTab === 'description' && (\n//             <div className='description-tab'>\n//               <p>{property.longDescription}</p>\n//               <h3>Key Features</h3>\n//               <ul>\n//                 <li>{property.bedrooms} bedrooms</li>\n//                 <li>{property.type}</li>\n//                 <li>Location: {property.postcode}</li>\n//                 <li>Added: {new Date(property.dateAdded).toLocaleDateString()}</li>\n//               </ul>\n//             </div>\n//           )}\n//           {activeTab === 'floorplan' && (\n//             <div className=\"floorplan-tab\">\n//             {property.floorPlan ? (\n//               <img \n//                 src={property.floorPlan} \n//                 alt=\"Floor Plan\" \n//                 className=\"floorplan-image\" \n//               />\n//             ) : (\n//               <p>Floor plan coming soon...</p>\n//             )}\n//           </div>\n\n//           )}\n//           {activeTab === 'map' && (\n//             <div className=\"map-tab\">\n//               {property.location && (\n//               <iframe\n//                 title=\"Property Location\"\n//                 width=\"100%\"\n//                 height=\"450\"\n//                 style={{ border: 0 }}\n//                 loading=\"lazy\"\n//                 src={`https://www.google.com/maps/embed?q=${property.location.lat},${property.location.lng}`}\n//                 allowFullScreen\n//               ></iframe>\n//               )}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PropertyDetails;\n\nimport React, { useState } from 'react';\n\n// PropertyDetails component manages the display of property details including images, description, and tabs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyDetails = ({\n  property,\n  onBack,\n  isFavorite,\n  onToggleFavorite\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('description');\n  const [selectedImage, setSelectedImage] = useState(0);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  if (!property) return null; // If no property is provided, return null\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency: 'GBP',\n      maximumFractionDigits: 0\n    }).format(price); // Format price as GBP currency\n  };\n\n  // Image navigation controls\n  const nextImage = () => {\n    setSelectedImage(prev => prev === property.images.length - 1 ? 0 : prev + 1);\n  };\n  const previousImage = () => {\n    setSelectedImage(prev => prev === 0 ? property.images.length - 1 : prev - 1);\n  };\n\n  // Toggle fullscreen mode for image\n  const toggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"property-details-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"back-button\",\n      children: \"\\u2190 Back to Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-gallery ${isFullscreen ? 'fullscreen' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousImage,\n        className: \"gallery-nav prev\",\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextImage,\n        className: \"gallery-nav next\",\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: property.images[selectedImage],\n        alt: `${property.title} - view ${selectedImage + 1}`,\n        className: \"main-image\",\n        onClick: toggleFullscreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnails\",\n        children: property.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Thumbnail ${index + 1}`,\n          className: `thumbnail ${selectedImage === index ? 'active' : ''}`,\n          onClick: () => setSelectedImage(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: property.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"price\",\n      children: formatPrice(property.price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"location\",\n      children: property.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onToggleFavorite,\n      className: `favorite-button ${isFavorite ? 'active' : ''}`,\n      children: isFavorite ? '‚ù§Ô∏è Remove from Favorites' : 'ü§ç Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'description' ? 'active' : '',\n        onClick: () => setActiveTab('description'),\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'floor-plan' ? 'active' : '',\n        onClick: () => setActiveTab('floor-plan'),\n        children: \"Floor Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'map' ? 'active' : '',\n        onClick: () => setActiveTab('map'),\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'description' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: property.longDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }, this), activeTab === 'floor-plan' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: property.floorPlan,\n        alt: \"Floor Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 40\n      }, this), activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyDetails, \"OwT1tfKG8h765OH92hChVWrewsQ=\");\n_c = PropertyDetails;\nexport default PropertyDetails;\nvar _c;\n$RefreshReg$(_c, \"PropertyDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PropertyDetails","property","onBack","isFavorite","onToggleFavorite","_s","activeTab","setActiveTab","selectedImage","setSelectedImage","isFullscreen","setIsFullscreen","formatPrice","price","Intl","NumberFormat","style","currency","maximumFractionDigits","format","nextImage","prev","images","length","previousImage","toggleFullscreen","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","title","map","image","index","location","longDescription","floorPlan","_c","$RefreshReg$"],"sources":["C:/Users/Ahamed Sabith/OneDrive/Documents/ReactProjectCW/propertyseeker/src/components/PropertyDetails.jsx"],"sourcesContent":["// /**\r\n//  * This component renders the details of a property, including an image gallery, \r\n//  * property information, and tabs for description, floor plan, and map. \r\n//  * It also includes functionality to mark the property as a favorite and drag support for favorites.\r\n// */\r\n\r\n// import React, { useState } from 'react'; // Import the React and useState hooks\r\n\r\n// const PropertyDetails = ({\r\n//   property,\r\n//   onBack,\r\n//   isFavorite,\r\n//   onToggleFavorite,\r\n// }) => {\r\n//   const [activeTab, setActiveTab] = useState('description');\r\n//   const [selectedImage, setSelectedImage] = useState(0);\r\n//   const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n//   if (!property) return null;\r\n\r\n//   const formatPrice = (price) => {\r\n//     return new Intl.NumberFormat('en-GB', {\r\n//       style: 'currency',\r\n//       currency: 'GBP',\r\n//       maximumFractionDigits: 0,\r\n//     }).format(price);\r\n//   };\r\n\r\n//    //image gallery controls\r\n//    const nextImage = () => {\r\n//     setSelectedImage((prev) => \r\n//       prev === property.images.length - 1 ? 0 : prev + 1\r\n//     );\r\n//   };\r\n\r\n//   const previousImage = () => {\r\n//     setSelectedImage((prev) => \r\n//       prev === 0 ? property.images.length - 1 : prev - 1\r\n//     );\r\n//   };\r\n\r\n//   //fullscreen toggle\r\n//   const toggleFullscreen = () => {\r\n//     setIsFullscreen(!isFullscreen);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"property-details-page\">\r\n//       <button onClick={onBack} className=\"back-button\">\r\n//         ‚Üê Back to Search\r\n//       </button>\r\n\r\n//       <div className={`image-gallery ${isFullscreen ? 'fullscreen' : ''}`}>\r\n//         <button onClick={previousImage} className=\"gallery-nav prev\">\r\n//           ‚Äπ\r\n//         </button>\r\n//         <button onClick={nextImage} className=\"gallery-nav next\">\r\n//           ‚Ä∫\r\n//         </button>\r\n\r\n//         <img\r\n//           src={`${property.images[selectedImage]}`}\r\n//           alt={`${property.title} - view ${selectedImage + 1}`}\r\n//           className=\"main-image\"\r\n//           onClick={toggleFullscreen}\r\n//         />\r\n\r\n//         <div className=\"thumbnails\">\r\n//           {property.images.map((image, index) => (\r\n//             <img\r\n//               key={index}\r\n//               src={image}\r\n//               alt={`Thumbnail ${index + 1}`}\r\n//               className={`thumbnail ${selectedImage === index ? 'active' : ''}`}\r\n//               onClick={() => setSelectedImage(index)}\r\n//             />\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <h1>{property.title}</h1>\r\n//       <p className=\"property-price\">{formatPrice(property.price)}</p>\r\n\r\n//       {/* Added drag support for favorites */}\r\n//       <div \r\n//         className=\"favorite-container\"\r\n//         draggable\r\n//         onDragStart={(e) => {\r\n//           e.dataTransfer.setData('propertyId', property.id.toString());\r\n//         }}\r\n//       >\r\n\r\n//        <button \r\n//           onClick={onToggleFavorite}\r\n//           className={`favorite-button ${isFavorite ? 'active' : ''}`}\r\n//         >\r\n//           {isFavorite ? '‚ù§Ô∏è Remove from Favorites' : 'ü§ç Add to Favorites'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tabs\">\r\n//         <div className=\"tab-list\">\r\n//           <button\r\n//             className={`tab ${activeTab === 'description' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('description')}\r\n//           >\r\n//             Description\r\n//           </button>\r\n\r\n//           <button\r\n//             className={`tab ${activeTab === 'floorplan' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('floorplan')}\r\n//           >\r\n//             Floor Plan\r\n//           </button>\r\n\r\n//           <button\r\n//             className={`tab ${activeTab === 'map' ? 'active' : ''}`}\r\n//             onClick={() => setActiveTab('map')}\r\n//           >\r\n//             Map\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div className=\"tab-content\">\r\n//           {activeTab === 'description' && (\r\n//             <div className='description-tab'>\r\n//               <p>{property.longDescription}</p>\r\n//               <h3>Key Features</h3>\r\n//               <ul>\r\n//                 <li>{property.bedrooms} bedrooms</li>\r\n//                 <li>{property.type}</li>\r\n//                 <li>Location: {property.postcode}</li>\r\n//                 <li>Added: {new Date(property.dateAdded).toLocaleDateString()}</li>\r\n//               </ul>\r\n//             </div>\r\n//           )}\r\n//           {activeTab === 'floorplan' && (\r\n//             <div className=\"floorplan-tab\">\r\n//             {property.floorPlan ? (\r\n//               <img \r\n//                 src={property.floorPlan} \r\n//                 alt=\"Floor Plan\" \r\n//                 className=\"floorplan-image\" \r\n//               />\r\n//             ) : (\r\n//               <p>Floor plan coming soon...</p>\r\n//             )}\r\n//           </div>\r\n\r\n//           )}\r\n//           {activeTab === 'map' && (\r\n//             <div className=\"map-tab\">\r\n//               {property.location && (\r\n//               <iframe\r\n//                 title=\"Property Location\"\r\n//                 width=\"100%\"\r\n//                 height=\"450\"\r\n//                 style={{ border: 0 }}\r\n//                 loading=\"lazy\"\r\n//                 src={`https://www.google.com/maps/embed?q=${property.location.lat},${property.location.lng}`}\r\n//                 allowFullScreen\r\n//               ></iframe>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PropertyDetails;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// PropertyDetails component manages the display of property details including images, description, and tabs\r\nconst PropertyDetails = ({ property, onBack, isFavorite, onToggleFavorite }) => {\r\n  const [activeTab, setActiveTab] = useState('description');\r\n  const [selectedImage, setSelectedImage] = useState(0);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  if (!property) return null; // If no property is provided, return null\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-GB', {\r\n      style: 'currency',\r\n      currency: 'GBP',\r\n      maximumFractionDigits: 0\r\n    }).format(price); // Format price as GBP currency\r\n  };\r\n\r\n  // Image navigation controls\r\n  const nextImage = () => {\r\n    setSelectedImage((prev) => (prev === property.images.length - 1 ? 0 : prev + 1));\r\n  };\r\n\r\n  const previousImage = () => {\r\n    setSelectedImage((prev) => (prev === 0 ? property.images.length - 1 : prev - 1));\r\n  };\r\n\r\n  // Toggle fullscreen mode for image\r\n  const toggleFullscreen = () => {\r\n    setIsFullscreen(!isFullscreen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"property-details-page\">\r\n      <button onClick={onBack} className=\"back-button\">\r\n        ‚Üê Back to Search\r\n      </button>\r\n\r\n      <div className={`image-gallery ${isFullscreen ? 'fullscreen' : ''}`}>\r\n        <button onClick={previousImage} className=\"gallery-nav prev\">‚Äπ</button>\r\n        <button onClick={nextImage} className=\"gallery-nav next\">‚Ä∫</button>\r\n        <img\r\n          src={property.images[selectedImage]}\r\n          alt={`${property.title} - view ${selectedImage + 1}`}\r\n          className=\"main-image\"\r\n          onClick={toggleFullscreen}\r\n        />\r\n        <div className=\"thumbnails\">\r\n          {property.images.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={image}\r\n              alt={`Thumbnail ${index + 1}`}\r\n              className={`thumbnail ${selectedImage === index ? 'active' : ''}`}\r\n              onClick={() => setSelectedImage(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <h1>{property.title}</h1>\r\n      <p className=\"price\">{formatPrice(property.price)}</p>\r\n      <p className=\"location\">{property.location}</p>\r\n\r\n      <button onClick={onToggleFavorite} className={`favorite-button ${isFavorite ? 'active' : ''}`}>\r\n        {isFavorite ? '‚ù§Ô∏è Remove from Favorites' : 'ü§ç Add to Favorites'}\r\n      </button>\r\n\r\n      {/* Tabs for Description, Floor Plan, and Map */}\r\n      <div className=\"tabs\">\r\n        <button className={activeTab === 'description' ? 'active' : ''} onClick={() => setActiveTab('description')}>Description</button>\r\n        <button className={activeTab === 'floor-plan' ? 'active' : ''} onClick={() => setActiveTab('floor-plan')}>Floor Plan</button>\r\n        <button className={activeTab === 'map' ? 'active' : ''} onClick={() => setActiveTab('map')}>Map</button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'description' && <p>{property.longDescription}</p>}\r\n        {activeTab === 'floor-plan' && <img src={property.floorPlan} alt=\"Floor Plan\" />}\r\n        {activeTab === 'map' && <div>{/* Google Map integration here */}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyDetails;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EACzD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvD,IAAI,CAACI,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE5B,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}